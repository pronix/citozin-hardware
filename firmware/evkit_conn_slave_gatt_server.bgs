dim result
dim endpoint
dim in(20) # endpoint data in
dim in_len
dim out(20) # endpoint data out
dim out_len


event system_boot(major, minor, patch, build, ll_version, protocol_version, hw)
    
    endpoint = system_endpoint_uart1
    call system_endpoint_set_watermarks(endpoint, 0, 0) # disable watermarks
	#call gap_set_adv_parameters(32,48,7)
	call gap_set_mode(gap_general_discoverable, gap_undirected_connectable)
    
end

event connection_status(connection, flags, address, address_type, conn_interval, timeout, latency, bonding)
    
    #call system_endpoint_tx(endpoint, 11, "ATPP0CSV45\n")
	#call system_endpoint_tx(endpoint, 9, "ATPP0CON\n")
	call system_endpoint_tx(endpoint, 4, "ATZ\n")
	
end

event attributes_value(connection, reason, handle, offset, value_len, value_data)

    if handle = xgatt_OBD then
        out(0:value_len) = value_data(0:value_len)
        out_len = value_len
        call system_endpoint_set_watermarks(endpoint, $ff, out_len) # set TX watermark
    end if
    
end

event system_endpoint_watermark_tx(curr_endpoint, size)

    if curr_endpoint = endpoint then
        call system_endpoint_set_watermarks(endpoint, $ff, 0) # disable TX watermark
        call system_endpoint_tx(endpoint, out_len, out(0:out_len))
        call attributes_user_write_response(0, 0)
		out_len=0
    end if
    
end

event attributes_status(handle, flags)

    if (handle = xgatt_OBD) && (flags = 2) then
    
       #call system_endpoint_tx(endpoint, 57, "\n\r++ Local CCC set by remote side to start indications ++")
       #call system_endpoint_tx(endpoint, 46, "\n\r++ Transparent data exchange can start ++\n\n\r")
	   #call system_endpoint_tx(endpoint, 1, "\n")
       call system_endpoint_set_watermarks(endpoint, 1, $ff) # set RX watermark
	else 
	   call system_endpoint_set_watermarks(endpoint, 0, $ff) 
    end if

end

event system_endpoint_watermark_rx(curr_endpoint, size)
    if curr_endpoint = endpoint then
      in_len = size
      if in_len > 20 then
        in_len = 20
      end if
	  call system_endpoint_set_watermarks(endpoint, 0, $ff)
      call system_endpoint_rx(endpoint, in_len)(result, in_len, in(0:in_len))
      call attributes_write(xgatt_OBD, 0, in_len, in(0:in_len))
    end if
end

event attclient_indicated(connection, attrhandle)

    if attrhandle = xgatt_OBD then
        call system_endpoint_set_watermarks(endpoint, 1, $ff) # set RX watermark
		in_len=0
    end if
    
end

event connection_disconnected(conn, reas)
    #call system_endpoint_tx(endpoint, 11, "ATPP0CSV68\n")
	#call system_endpoint_tx(endpoint, 9, "ATPP0CON\n")
	call system_endpoint_tx(endpoint, 5, "ATLP\n")
	#call system_reg_write($70fa, 59)
    #call system_endpoint_tx(endpoint, 22, "\n\n\r-- Disconnected --\n")
    call system_endpoint_set_watermarks(endpoint, 0, 0) # disable watermarks
    #call gap_set_adv_data(32,48,7)
    call gap_set_mode(gap_general_discoverable, gap_undirected_connectable)
    
end
